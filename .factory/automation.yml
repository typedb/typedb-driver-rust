#
# Copyright (C) 2022 Vaticle
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

config:
  version-candidate: VERSION
  dependencies:
    dependencies: [build]
    typedb-common: [build]
    typedb-protocol: [build, release]
    typeql: [build, release]

build:
  quality:
    filter:
      owner: vaticle
      branch: master
    dependency-analysis:
      image: vaticle-ubuntu-22.04
      command: |
        bazel run @vaticle_dependencies//factory/analysis:dependency-analysis
  correctness:
    build:
      image: vaticle-ubuntu-22.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel build //...
        bazel run @vaticle_dependencies//tool/checkstyle:test-coverage
        bazel test $(bazel query 'kind(checkstyle_test, //...)') --test_output=errors
        bazel test $(bazel query 'kind(rustfmt_test, //...)') --@rules_rust//:rustfmt.toml=//:rustfmt_config
    test-integration-core:
      image: vaticle-ubuntu-22.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel build //...
        tools/start-core-server.sh
        bazel test //tests:queries --test_arg=-- --test_arg=core --test_arg=--test-threads=1 --test_output=streamed && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tools/stop-core-server.sh
        exit $TEST_SUCCESS
    test-integration-cluster:
      machine: 4-core-16-gb
      image: vaticle-ubuntu-22.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel build //...
        source tools/start-cluster-servers.sh # use source to receive export vars
        bazel test //tests:queries --test_env=ROOT_CA=$ROOT_CA --test_arg=-- --test_arg=cluster --test_arg=--test-threads=1 --test_output=streamed && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tools/stop-cluster-servers.sh
        exit $TEST_SUCCESS
    test-integration-runtimes:
      image: vaticle-ubuntu-22.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel build //...
        tools/start-core-server.sh
        bazel test //tests:runtimes --test_arg=-- --test_arg=--test-threads=1 --test_output=streamed && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tools/stop-core-server.sh
        exit $TEST_SUCCESS
    deploy-crate-snapshot:
      filter:
        owner: vaticle
        branch: master
      image: vaticle-ubuntu-22.04
      command: |
        export DEPLOY_CRATE_TOKEN=$REPO_VATICLE_CRATES_TOKEN
        bazel run --define version=$(git rev-parse HEAD) //:deploy_crate -- snapshot
      dependencies: [build]

release:
  filter:
    owner: vaticle
    branch: master
  deployment:
    deploy-github:
      image: vaticle-ubuntu-22.04
      command: |
        export PYENV_ROOT="/opt/pyenv"
        pyenv install 3.7.9
        pyenv global 3.7.9
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.7.9/lib/python3.7/site-packages/lsb_release.py
        python3 -m pip install certifi
        export NOTES_CREATE_TOKEN=$REPO_GITHUB_TOKEN
        bazel run @vaticle_dependencies//tool/release/notes:create -- $FACTORY_OWNER $FACTORY_REPO $FACTORY_COMMIT $(cat VERSION) ./RELEASE_TEMPLATE.md
        export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
        bazel run --define version=$(cat VERSION) //:deploy_github -- $FACTORY_COMMIT
    deploy-crate-release:
      image: vaticle-ubuntu-22.04
      command: |
        export DEPLOY_CRATE_TOKEN=$REPO_CRATES_TOKEN
        bazel run --define version=$(cat VERSION) //:deploy_crate -- release
